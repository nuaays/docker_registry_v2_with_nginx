upstream docker-registry {
  server registry_auth:5000;
}

server {
  listen 80;
  server_name _SERVER_NAME_;

  # SSL
  # ssl on;
  # ssl_certificate /etc/nginx/conf.d/domain.crt;
  # ssl_certificate_key /etc/nginx/conf.d/domain.key;

  # disable any limits to avoid HTTP 413 for large image uploads
  client_max_body_size 0;

  # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
  chunked_transfer_encoding on;

  location /v1/ {
    return 404;
  }

  location /v2/ {
    # Do not allow connections from docker 1.5 and earlier
    # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
    if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
      return 404;
    }

    #allow 10.0.0.0/24;
    #allow  127.0.0.1;
    #allow 192.168.3.145;
    #deny all;

    #####  only allow docker push os/env
    #set $request_type "0";
    #if ($request_uri !~ "^/v2/(os|env)/.*$") {
    #   set $request_type "${request_type}1";
    #}
    #if ($request_type = "01") {
    #   return 404 "[ERROR] restrict docker push this repo";
    #}

    # To add basic authentication to v2 use auth_basic setting plus add_header
    #auth_basic "registry.localhost";
    #auth_basic_user_file /etc/nginx/.htpasswd;
    add_header 'Docker-Distribution-Api-Version' 'registry/2.0' always;

    proxy_pass                          http://docker-registry;
    proxy_set_header  Host              $http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_read_timeout                  900;
  }



  #location ^~ "/v2/(os|env)/.*" {
  #   # only let get/head request pass
  #   if ( $request_method ~ ^(GET|HEAD)$ ) {
  #        return 404;
  #   }
  #}

  #restrict docker push
  #if ($request_method !~ ^(PATCH|PUT|POST)$ ) {
  #    return 405;
  #}

  #location ~ ^/v2/(env|os)/ {
  #   if ( $request_method !~ ^(PATCH|POST|PUT)$ ) {
  #       return 403;
  #   }
  #}



}

